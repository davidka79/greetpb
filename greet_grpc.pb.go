// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package greetpb

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GteetServiceClient is the client API for GteetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GteetServiceClient interface {
}

type gteetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGteetServiceClient(cc grpc.ClientConnInterface) GteetServiceClient {
	return &gteetServiceClient{cc}
}

// GteetServiceServer is the server API for GteetService service.
// All implementations must embed UnimplementedGteetServiceServer
// for forward compatibility
type GteetServiceServer interface {
	mustEmbedUnimplementedGteetServiceServer()
}

// UnimplementedGteetServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGteetServiceServer struct {
}

func (UnimplementedGteetServiceServer) mustEmbedUnimplementedGteetServiceServer() {}

// UnsafeGteetServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GteetServiceServer will
// result in compilation errors.
type UnsafeGteetServiceServer interface {
	mustEmbedUnimplementedGteetServiceServer()
}

func RegisterGteetServiceServer(s grpc.ServiceRegistrar, srv GteetServiceServer) {
	s.RegisterService(&GteetService_ServiceDesc, srv)
}

// GteetService_ServiceDesc is the grpc.ServiceDesc for GteetService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GteetService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "greet.GteetService",
	HandlerType: (*GteetServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "greetpb/greet.proto",
}
